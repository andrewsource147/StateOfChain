{"version":3,"file":"static/webpack/static/development/pages/_app.js.20572c6a53918d8570c7.hot-update.js","sources":["webpack:///./app/sagas/userSaga.js"],"sourcesContent":["import { takeLatest, take, put, call, fork, select, takeEvery, all, apply, cancel } from 'redux-saga/effects'\nimport EthereumServices from \"../services/ethereum\"\nimport {newWeb3Instance} from \"../services/web3\"\n\nimport {saveTx, saveVotes} from \"../actions/userActions\"\n\n\nfunction* voteUser(action) {\n    const { user, isVote } = action.payload\n    var ethereum = new EthereumServices()\n\n    try{\n        var dataVote = yield call([ethereum, ethereum.getVoteData], user, isVote)\n        var web3Instance = newWeb3Instance()\n        var userAddr = yield call([web3Instance, web3Instance.getCoinbase])\n        var txObject = {\n            from: userAddr.toLowerCase(),\n            to: ethereum.getStackAddr().toLowerCase(),\n            data: dataVote\n        }\n        //send tx\n        var txHash = yield call([web3Instance, web3Instance.sendTx], txObject)\n        yield put(saveTx(txHash))\n        console.log(txHash)\n    }catch(err){\n        console.log(err)\n    }\n    \n}\n\nfunction* updateUserVote(){\n    const {users} = action.payload\n    var ethereum = new EthereumServices()\n    var listVotes = []\n    for (var i = 0; i < users.length; i++){\n        var vote = yield call([ethereum, ethereum.getVoteUser], users[i].address)\n        listVotes.push(vote)\n    }\n    yield put(saveVotes(listVotes))\n}\n\nexport default function* userWatcher() {\n  yield takeLatest(\"USER.VOTE_USER\", voteUser)\n  yield takeLatest(\"USER.UPDATE_USER_VOTES\", updateUserVote)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAOA;;;AAuBA;;;AAWA;AACA;AA1CA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAKA;AACA;AANA;AAKA;AACA;AANA;AAOA;AACA;AARA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AARA;AAcA;AACA;AAfA;AAcA;AAdA;AAeA;AACA;AAhBA;AAgBA;AAhBA;AAAA;AACA;AADA;AAAA;AAAA;AAkBA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAKA;AACA;AACA;AAPA;AAIA;AAJA;AAAA;AACA;AADA;AAAA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}