{"version":3,"file":"static/webpack/static/development/pages/_app.js.391d643b3d0b57205a33.hot-update.js","sources":["webpack:///./app/services/web3/dapp/ModernMetamaskBrowser.js"],"sourcesContent":["\nimport Web3 from \"web3\"\nimport DappBrowser from \"./DappBrowser\";\n\n\nexport default class ModernMetamaskBrowser extends DappBrowser {\n  constructor() {\n    super()\n    this.web3 = new Web3(Web3.givenProvider)\n  }\n\n  getWalletType = () => {\n    return \"metamask\"\n  }\n\n  getNetworkId = () => {\n    return new Promise((resolve, reject) => {\n      this.web3.eth.net.getId((error, result) => {\n        if (error || !result) {\n          var error = new Error(\"Cannot get network id\")\n          reject(error)\n        } else {\n          resolve(result)\n        }\n      })\n    })\n  }\n\n  getCoinbase = () => {\n    if (window.ethereum) {\n      return new Promise((resolve, reject) => {\n        window.ethereum.enable().then(() => {\n          this.web3.eth.getCoinbase((error, result) => {\n            if (error || !result) {\n              var error = new Error(\"Cannot get coinbase\")\n              reject(error)\n            } else {\n              resolve(result)\n            }\n          })\n        }).catch(err => {\n          console.log(err)\n          var error = new Error(\"Cannot get coinbase\")\n          reject(error)\n        })\n       \n      })\n    } else {\n      return new Promise((resolve, reject) => {\n        this.web3.eth.getCoinbase((error, result) => {\n          // alert(error)\n          // alert(result)\n          console.log(error)\n          //   console.log(result)      \n          if (error || !result) {\n            var error = new Error(\"Cannot get coinbase\")\n            reject(error)\n          } else {\n            resolve(result)\n          }\n        })\n      })\n    }\n  }\n\n  setDefaultAddress(address) {\n    this.web3.eth.defaultAccount = address\n  }\n  \n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA;AAFA;AAGA;AACA;;;AAuDA;AACA;AACA;;;;AA9DA;AACA;;;;;A","sourceRoot":""}