{"version":3,"file":"static/webpack/static/development/pages/_app.js.4e9c67e8a658b0baaf72.hot-update.js","sources":["webpack:///./app/sagas/commonSaga.js","webpack:///./app/sagas/index.js"],"sourcesContent":["import { takeLatest, take, put, call, fork, select, takeEvery, all, apply, cancel } from 'redux-saga/effects'\nimport {newWeb3Instance} from \"../services/web3\"\nimport * as commonActions from \"../actions/commonActions\"\nimport EthereumServices from \"../services/ethereum\"\n\n\nfunction* checMetamaskInstall(action){\n   var web3Instance = newWeb3Instance()\n   if (web3Instance === false){\n       yield put(commonActions.throwMetamaskError(\"Metamask is not installed\"))\n       return\n   }\n   //check network is correct\n   var networkId = yield call([web3Instance, web3Instance.getNetworkId])\n   if (networkId !== 3){\n        yield put(commonActions.throwMetamaskError(\"Network is not in ropsten network\"))\n        return\n   }\n   try{\n        var address = yield call([web3Instance, web3Instance.getCoinbase])\n        var ethereum = new EthereumServices()\n        //check vote\n        var vote = yield call([ethereum, ethereum.getVoteUser], address)\n        console.log({address, vote})\n        yield put(commonActions.updateMetamaskAccount(address, vote))\n        return\n   }catch(err){\n       console.log(err)\n       yield put(commonActions.throwMetamaskError(\"Cannot get address, You probably do not login Metamask\"))\n       return\n   }\n}\n\nexport default function* commonWatcher() {\n  yield takeLatest(\"COMMON.CHECK_METAMASK_INSTALL\", checMetamaskInstall)\n}\n","import { fork, all } from 'redux-saga/effects'\nimport questionWatcher from './questionSaga'\nimport answerWatcher from './answerSaga'\nimport userWatcher from './userSaga'\nimport commonWatcher from './commonSaga'\n\nexport default function* rootSaga() {\n  yield all([\n    fork(questionWatcher),\n    fork(answerWatcher),\n    fork(userWatcher)\n  ])\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAMA;;;AA2BA;AACA;AAlCA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAOA;AACA;AARA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AASA;AACA;AAVA;AAAA;AACA;AADA;AAAA;AAAA;AAaA;AACA;AAdA;AAaA;AACA;AACA;AAfA;AAgBA;AACA;AAjBA;AAgBA;AACA;AAAA;AAAA;AAAA;AAjBA;AAkBA;AACA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AAqBA;AArBA;AAsBA;AACA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}